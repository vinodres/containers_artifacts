# deployment.yaml
apiVersion: apps/v1 # The API resource where this workload resides
kind: Deployment # The kind of workload we're creating
metadata:
  name: userprofile # This will be the name of the deployment
  namespace: api
spec:
  selector: # Define the wrapping strategy
    matchLabels: # Match all pods with the defined labels
      app: userprofile
  template: # This is the template of the pod inside the deployment
    metadata: # Metadata for the pod
      labels:
        app: userprofile
    spec:
      containers: # Here we define all containers
        - image: registryxzq2360.azurecr.io/vinodtripinsights/userprofile:1.0
          name: userprofile
          resources:
            requests: # Minimum amount of resources requested
              cpu: 100m
              memory: 128Mi
            limits: # Maximum amount of resources requested
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 80 # This container exposes port 80
              name: http # We named that port "http" so we can refer to it later
          envFrom:
          - secretRef:
              name: db-credentials
---
#service.yaml
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: userprofile
  ports:
    - port: 80 # SERVICE exposed port
      name: http # SERVICE port name
      protocol: TCP # The protocol the SERVICE will listen to
      targetPort: http # Port to forward to in the POD